{{- if .Values.enterpriseUi.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "anchore-engine.enterprise-ui.fullname" . | quote }}
  labels:
    app: {{ include "anchore-engine.fullname" . | quote }}
    component: "enterprise-ui"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: "{{ template "anchore-engine.fullname" .}}"
      component: "enterprise-ui"
  replicas: {{ .Values.enterpriseUi.replicaCount }}
  template:
    metadata:
      labels:
        app: "{{ template "anchore-engine.fullname" . }}"
        component: "enterprise-ui"
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
{{- if .Values.enterpriseUi.annotations }}
      annotations:
{{ toYaml .Values.enterpriseUi.annotations | indent 8 }}
{{- end }}
    spec:
      volumes:
      - name: anchore-license
        secret:
          secretName: {{ .Values.enterpriseGlobal.licenseSecretName }}
      imagePullSecrets:
      - name: {{ .Values.enterpriseGlobal.imagePullSecretName }}
      containers:
      - name: {{ .Chart.Name }}-enterprise-ui
        image: {{ .Values.enterpriseUi.image.repository }}:{{ .Values.enterpriseUi.image.tag }}
        imagePullPolicy: {{ .Values.enterpriseUi.image.pullPolicy }}
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "redis.fullname" . }}
              key: redis-password
        - name: ANCHORE_REDIS_URI
          value: {{ printf "redis://:$(REDIS_PASSWORD)@%s-master:6379" ( include "redis.fullname" . ) }}
        - name: ANCHORE_ENGINE_URI
          value: 'http://{{ template "anchore-engine.core.fullname" . }}:{{ .Values.service.ports.extApi }}/v1'
        - name: ANCHORE_LICENSE_PATH
          value: '/'
        - name: ANCHORE_RBAC_URI
          value: 'http://{{ template "anchore-engine.core.fullname" . }}:{{ .Values.enterpriseRbac.service.apiPort }}/v1'
        - name: ANCHORE_ENABLE_SSL
          value: '{{ .Values.enterpriseUi.enableSsl }}'
        - name: ANCHORE_ENABLE_PROXY
          value: '{{ .Values.enterpriseUi.enableProxy }}'
        - name: ANCHORE_ALLOW_SHARED_LOGIN
          value: '{{ .Values.enterpriseUi.enableSharedLogin }}'
        ports:
        - containerPort: 3000
          protocol: TCP
          name: enterprise-ui
        volumeMounts:
        - name: anchore-license
          mountPath: "/license.yaml"
          subPath: license.yaml
        readinessProbe:
          httpGet:
            path: /service/health
            port: enterprise-ui
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /service/health
            port: enterprise-ui
          timeoutSeconds: 10
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 10
        resources:
{{ toYaml .Values.enterpriseUi.resources | indent 10 }}
    {{- if .Values.enterpriseUi.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.enterpriseUi.nodeSelector | indent 8 }}
    {{- end }}
    {{- with .Values.enterpriseUi.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.enterpriseUi.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "anchore-engine.enterprise-ui.fullname" . | quote }}
  labels:
    app: "{{ template "anchore-engine.fullname" . }}"
    component: "enterprise-ui"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  type: {{ .Values.enterpriseUi.service.type }}
  ports:
    - name: enterprise-ui
      port: {{ .Values.enterpriseUi.service.httpPort }}
      protocol: TCP
      targetPort: 3000
  selector:
    app: "{{ template "anchore-engine.fullname" . }}"
    component: "enterprise-ui"

{{- end -}}
